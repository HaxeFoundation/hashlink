name: CI

on: 
  push:
  pull_request:
  release:
    types: [published, edited]

jobs:
  build-windows:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: windows-latest
    steps:
      - name: Install Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.0
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Checkout hashlink
        uses: actions/checkout@v2
      - name: Install SDL
        shell: powershell
        run: |
          Invoke-WebRequest https://www.libsdl.org/release/SDL2-devel-2.0.5-VC.zip -OutFile SDL.zip
          Expand-Archive SDL.zip -DestinationPath .
          Move-Item SDL2-* include/sdl
          Remove-Item SDL.zip
      - name: Install OpenAL
        shell: powershell
        run: |
          Invoke-WebRequest http://openal-soft.org/openal-binaries/openal-soft-1.17.2-bin.zip -OutFile openal.zip
          Expand-Archive openal.zip -DestinationPath .
          Move-Item openal-* include/openal
          Remove-Item openal.zip
      - name: Build Hashlink
        run: |
          MSBuild hl.sln /nologo /m /clp:ErrorsOnly "-p:Configuration=Release;PlatformToolset=v142;WindowsTargetPlatformVersion=10"
          mkdir hl-1.12.0
          mkdir hl-1.12.0/include
          cp src\hl.h hl-1.12.0/include
          cp src\hlc.h hl-1.12.0/include
          cp src\hlc_main.c hl-1.12.0/include
          cp x64\Release\*.hdll hl-1.12.0
          cp x64\Release\*.lib hl-1.12.0
          cp x64\Release\*.exe hl-1.12.0
          cp x64\Release\*.dll hl-1.12.0
          cp include\openal\bin\Win64\soft_oal.dll hl-1.12.0/OpenAL32.dll
          cp c:\Windows\System32\msvcr120.dll hl-1.12.0
          cp include\sdl\lib\x64\SDL2.dll hl-1.12.0
          Compress-Archive -DestinationPath hl-1.12.0-win.zip -Path hl-1.12.0\*
      - name: Upload Artifact
        uses: "actions/upload-artifact@v2"
        with:
          name: windows64-binaries
          path: hl-1.12.0-win.zip
      - name: Run tests
        run: |
          haxe -m HelloWorld -cp other/tests -hl test/hello.hl
          x64/Release/hl test/hello.hl
          haxe -m Threads -cp other/tests -hl test/threads.hl
          x64/Release/hl test/threads.hl
          haxe -m UVSample -cp other/uvsample -hl test/uvsample.hl
          x64/Release/hl test/uvsample.hl
  build-linux:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.0
      - name: Update packages
        run: sudo apt-get update
        continue-on-error: true
      - name: Install packages
        run: sudo apt-get install libpng-dev libturbojpeg-dev libvorbis-dev libopenal-dev libsdl2-dev libmbedtls-dev libuv1-dev
      - name: Checkout hashlink
        uses: actions/checkout@v2
      - name: Build Hashlink
        run: |
          make
          sudo make install
          sudo ldconfig
          make release
      - name: Run tests
        run: |
          haxe -m HelloWorld -cp other/tests -hl test/hello.hl
          hl test/hello.hl
          haxe -m Threads -cp other/tests -hl test/threads.hl
          hl test/threads.hl
          haxe -m UVSample -cp other/uvsample -hl test/uvsample.hl
          hl test/uvsample.hl
      - name: Upload Artifact
        uses: "actions/upload-artifact@v2"
        with:
          name: linux64-binaries
          path: hl-1.12.0-linux.tgz
  build-mac:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: macos-latest
    steps:
      - name: Install Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.0
      - name: Checkout hashlink
        uses: actions/checkout@v2
      - name: Install packages
        run: |
          brew bundle
          brew install mbedtls@2
          brew link mbedtls@2
      - name: Build Hashlink
        run: |
          make
          sudo make codesign_osx
          sudo make install
          make release
      - name: Run tests
        run: |
          haxe -m HelloWorld -cp other/tests -hl test/hello.hl
          hl test/hello.hl
          haxe -m Threads -cp other/tests -hl test/threads.hl
          hl test/threads.hl
          haxe -m UVSample -cp other/uvsample -hl test/uvsample.hl
          hl test/uvsample.hl
      - name: Upload Artifact
        uses: "actions/upload-artifact@v2"
        with:
          name: mac64-binaries
          path: hl-1.12.0-osx.tgz
  make-release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - run: gh release upload ${{ github.event.release.tag_name }} windows64-binaries/hl-1.12.0-win.zip mac64-binaries/hl-1.12.0-osx.tgz linux64-binaries/hl-1.12.0-linux.tgz
