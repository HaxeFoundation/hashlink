language: haxe

linux64_install: &linux64_install
  - docker build -f Dockerfile -t hashlink .

linux32_install: &linux32_install
  - docker build -f Dockerfile-i386 -t hashlink .

docker_cmake_script: &docker_cmake_script
  - >
    docker run hashlink bash -c
    'set -ex &&
    (if [ "$ARCH" = "32" ]; then
      cmake . -DCMAKE_TOOLCHAIN_FILE=other/cmake/linux32.toolchain.cmake;
    else
      cmake .;
    fi) &&
    make &&
    make test ARGS=-V'

docker_make_script: &docker_make_script
  - >
    docker run hashlink bash -c
    'set -ex &&
    make all &&
    make install &&
    ldconfig &&
    haxe -hl hello.hl -cp other/tests -main HelloWorld -D interp &&
    ./hl hello.hl &&
    haxe -hl src/_main.c -cp other/tests -main HelloWorld &&
    make hlc &&
    ./hlc'

mac_before_install: &mac_before_install
  - brew update
  - brew install jpeg-turbo sdl2 libogg libvorbis openal-soft mbedtls libuv
  - haxelib install hashlink

cmake_install: &cmake_install
  - cmake .
  - make

make_install: &make_install
  - make all
  - sudo make install

cmake_script: &cmake_script
  - make test ARGS="-V"

make_script: &make_script
  - haxe -hl src/_main.c -cp other/tests -main HelloWorld &&
    make hlc &&
    ./hlc

sudo: required
matrix:
  include:
    # Linting
    - os: linux
      dist: trusty
      env: LINTING
      install:
        - sudo pip install cmakelint==1.3.4.1
      script:
        - cmakelint --filter=-linelength $(find . -name 'CMakeLists.txt' -print)
    # Linux 64-bit
    - haxe: development
      os: linux
      dist: trusty
      env: ARCH=64 BUILD=cmake
      services: [docker]
      install: *linux64_install
      script: *docker_cmake_script
    - haxe: development
      os: linux
      dist: trusty
      env: ARCH=64 BUILD=make
      services: [docker]
      install: *linux64_install
      script: *docker_make_script
    # Linux 32-bit
    - haxe: development
      os: linux
      dist: trusty
      env: ARCH=32 BUILD=cmake
      services: [docker]
      install: *linux32_install
      script: *docker_cmake_script
    - haxe: development
      os: linux
      dist: trusty
      env: ARCH=32 BUILD=make
      services: [docker]
      install: *linux32_install
      script: *docker_make_script
    # Mac xcode9.3
    - haxe: development
      os: osx
      osx_image: xcode9.3
      env: ARCH=64 BUILD=cmake
      before_install: *mac_before_install
      install: *cmake_install
      script: *cmake_script
    - haxe: development
      os: osx
      osx_image: xcode9.3
      env: ARCH=64 BUILD=make
      before_install: *mac_before_install
      install: *make_install
      script: *make_script
    # Mac xcode7.1
    - haxe: development
      os: osx
      osx_image: xcode7.1
      env: ARCH=64 BUILD=cmake
      before_install: *mac_before_install
      install: *cmake_install
      script: *cmake_script
    - haxe: development
      os: osx
      osx_image: xcode7.1
      env: ARCH=64 BUILD=make
      before_install: *mac_before_install
      install: *make_install
      script: *make_script
